name: "Test and coverage check"
description: "Test and coverage check with gcovr, pass if coverage is greater than 20%"

runs:
  using: "composite"
  steps:
    - name: "Run coverage"
      shell: bash
      run: |
        PROJECT_PATH=$(pwd)

        # Run tests
        # This command runs the 'ctest' tool to execute tests located in the 
        # 'build/tests' directory and displays the output only when a test fails.
        ctest --test-dir build/tests --output-on-failure

        # This command runs the 'gcovr' tool to generate a coverage report and
        # save it in the 'coverage.txt' file.
        gcovr -r $PROJECT_PATH . > $PROJECT_PATH/coverage.txt

        echo "Runnig: gcovr -r $PROJECT_PATH ."

        cat $PROJECT_PATH/coverage.txt

        # Find the value of correct coverage
        # The 'grep' command searches for the line containing the word 'TOTAL' in the 'coverage.txt' file.
        # The 'awk' command prints the last column of the line.
        # The 'cut' command removes the '%' character from the last column.
        COVERAGE_RESULT=$(grep "TOTAL" $PROJECT_PATH/coverage.txt | awk '{print $NF}' | cut -d '%' -f 1)

        # Coverage lines GT 20
        if [ "$(echo "$COVERAGE_RESULT > 20" | bc)" -eq 1 ]; then
            echo "Coverage is greater than 20%. Nice!"
            exit 0
        else
            echo "Error: Coverage is less than or equal to 20%"
            exit 0
        fi

    # Upload errors as an artifact, when failed
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Tests or coverage errors!!!
        path: $(pwd)/error_flag.txt
        retention-days: 1
